import java.util.Arrays;
import java.util.Random;

public class SortingAlgorithmComparison {

    public static void main(String[] args) {
        // Create an array of random integers
        int[] array = new Random().ints(100000).toArray();

        // Time the selection sort algorithm
        long startTime = System.nanoTime();
        selectionSort(array);
        long endTime = System.nanoTime();
        long selectionSortTime = endTime - startTime;

        // Time the bubble sort algorithm
        startTime = System.nanoTime();
        bubbleSort(array);
        endTime = System.nanoTime();
        long bubbleSortTime = endTime - startTime;

        // Time the insertion sort algorithm
        startTime = System.nanoTime();
        insertionSort(array);
        endTime = System.nanoTime();
        long insertionSortTime = endTime - startTime;

        // Print the results
        System.out.println("Selection sort time: " + selectionSortTime + " nanoseconds");
        System.out.println("Bubble sort time: " + bubbleSortTime + " nanoseconds");
        System.out.println("Insertion sort time: " + insertionSortTime + " nanoseconds");

        // Find the fastest algorithm
        long fastestTime = Math.min(selectionSortTime, Math.min(bubbleSortTime, insertionSortTime));
        String fastestAlgorithm = "";
        if (fastestTime == selectionSortTime) {
            fastestAlgorithm = "Selection Sort";
        } else if (fastestTime == bubbleSortTime) {
            fastestAlgorithm = "Bubble Sort";
        } else {
            fastestAlgorithm = "Insertion Sort";
        }

        System.out.println("The fastest algorithm is: " + fastestAlgorithm);
    }

    public static void selectionSort(int[] array) {
        for (int i = 0; i < array.length - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < array.length; j++) {
                if (array[j] < array[minIndex]) {
                    minIndex = j;
                }
            }

            int temp = array[i];
            array[i] = array[minIndex];
            array[minIndex] = temp;
        }
    }

    public static void bubbleSort(int[] array) {
        for (int i = 0; i < array.length - 1; i++) {
            for (int j = 0; j < array.length - i - 1; j++) {
                if (array[j] > array[j + 1]) {
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }

    public static void insertionSort(int[] array) {
        for (int i = 1; i < array.length; i++) {
            int currentElement = array[i];
            int j = i - 1;
            while (j >= 0 && array[j] > currentElement) {
                array[j + 1] = array[j];
                j--;
            }

            array[j + 1] = currentElement;
        }
    }
}
